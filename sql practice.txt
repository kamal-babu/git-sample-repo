sql practice:

movie rating

# Write your MySQL query statement below
(select name as results from users u join movierating m on u.user_id = m.user_id group by name
order by count(rating) desc,1 limit 1)
union all
(select title as results from movies m1 join movierating a on m1.movie_id=a.movie_id 
where date_format(created_at,'%Y-%m')='2020-02' group by m1.movie_id order by avg(rating) desc,1 limit 1);

==================================================================================
exchange seats:

# Write your MySQL query statement below
select
case when mod(id,2)=0 then id-1
when mod(id,2)=1 and id+1 not in (select id from seat) then id
else id+1 end as id,
student
from seat order by id
==================================================================================
Manager atlest 5 direct reporties
# Write your MySQL query statement below
select name from employee where id in(
select managerId from employee group by managerId having count(id) >=5
)

==================================================================================
confirmation rate:
# Write your MySQL query statement below
SELECT a.user_id, round(ifnull(avg(action = 'confirmed'), 0),2) as confirmation_rate
FROM Signups a
LEFT JOIN Confirmations b
ON a.user_id = b.user_id
GROUP BY a.user_id
==================================================================================
Monthly transactions
# Write your MySQL query statement below
select date_format(trans_date,'%Y-%m') as month, country, count(state) as trans_count,
sum(if(state="approved",1,0)) as approved_count,sum(amount) as trans_total_amount,
sum(if(state="approved",amount,0)) as approved_total_amount from transactions
group by date_format(trans_date,'%Y-%m'), country
==================================================================================
immediate food delivery
# Write your MySQL query statement below
with ok as (select *, row_number() over (partition by customer_id order by order_date) as 'rn'
, (case when order_date = customer_pref_delivery_date then 1.0 else 0 end) as 'immediate'
from Delivery)

select round(100*sum(immediate)/count(immediate),2) as 'immediate_percentage'
from ok
where rn=1
==================================================================================
product sales analysis:
# Write your MySQL query statement below
select product_id,year as first_year,quantity,price from(
select product_id,year,quantity,price,dense_rank() over(partition by product_id order by year) as rn from sales
)a where a.rn=1
==================================================================================
